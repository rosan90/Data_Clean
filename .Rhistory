acs[acs$SERIALNO==c(30346, 53292), ]
?jpeg
?read.jpeg
install.packages(jpeg)
install.packages("jpeg")
source('~/Documents/Coursera/Data Science/R Code/run_analysis.R')
detach(package:RMySQL)
detach(packages:RMySQL)
?read.jpeg
img <- readJPEG(system.file("img", "getdata_jeff.jpg", package="jpeg"))
img <- read.JPEG(system.file("img", "getdata_jeff.jpg", package="jpeg"))
img <- readjpwg(system.file("img", "getdata_jeff.jpg", package="jpeg"))
img <- readjpeg(system.file("img", "getdata_jeff.jpg", package="jpeg"))
?readjpeg
?readJPEG
library(jpeg)
img <- readJPEG(system.file("img", "getdata_jeff.jpg", package="jpeg"))
getwd()
file.exists("getdata_jeff.jpg")
img <- readJPEG("img", "getdata_jeff.jpg", package="jpeg")
?readJPEG
img <- readJPEG(system.file("img", "getdata_jeff.jpg", package="jpeg"), TRUE)
test<-readJPEG("getdata_jeff.jpg")
img<-readJPEG("getdata_jeff.jpg", TRUE)
img
dim(img)
?quantile
quantile(img)
quantile(img, probs=c(0.3,0.8))
gdp <- read.csv("getdata_data_GDP.csv", header=TRUE, skip=4)
?read.csv
head(gdp)
gdp <- read.csv("getdata_data_GDP.csv", header=FALSE, skip=5, col.names = c("ID", "Rank", "NA", "Country","GDP"))
gdp <- read.csv("getdata_data_GDP.csv", header=FALSE, skip=5)
head(gdp)
gdp <- gdp[,c(1:2,4:5)]
gdp
head(gdp)
gdp <- read.csv("getdata_data_EDSTATS_Country.csv", header=FALSE, skip=1)
gdp
gdp <- read.csv("getdata_data_GDP.csv", header=FALSE, skip=5)
gdp <- gdp[,c(1:2,4:5)]
edstats <- read.csv("getdata_data_EDSTATS_Country.csv", header=FALSE, skip=1)
edstats
head(edstats)
edstats <- edstats[1:3]
edstats
mergedata = merge(gdp, edstats, by.x="V1")
mergedata = merge(gdp, edstats, by.y="V1")
interset(names(gdp), names(edstats))
library(plyr)
interset(names(gdp), names(edstats))
intersect(names(gdp), names(edstats))
head(gdp)
head(edstats)
gdp <- gdp[1]
edstats <- edstats[1]
intersect(names(gdp), names(edstats))
mergedata = intersect(names(gdp), names(edstats))
mergedata
mergedata = intersect(names(gdp), names(edstats), all=TRUE)
mergedata = merge(gdp, edstats, all=TRUE)
mergedata
gdp <- sort(gdp)
gdp <- sort(gdp[1])
gdp <- order(gdp[1])
gdp
gdp
edstats
gdp <- read.csv("getdata_data_GDP.csv", header=FALSE, skip=5)
gdp
gdp <- gdp[1]
gdp
?sort
sort(gdp)
sort(gdp$V1)
sort(gdp$V1[!is.na])
sort(gdp$V1[!is.na],)
sort(gdp$V1[!NULL])
sort(gdp$V1)
testsrt <- sort(gdp$V1)
testsrt
testsrt[1]
testsrt[[1]
]
testsrt[,1]
testsrt[1]
testsrt
?null
?NULL
testsrt[!is.null]
!is.null(testsrt)
!is.null(testsrt[testsrt$V1])
testsrt <- !is.null(sort(gdp$V1))
testsrt
testsrt <- sort(gdp$V1)
testsrt
dim(testsrt)
str(testsrt)
as.list(testsrt)
as.list(testsrt[[1],])
as.list(testsrt[[1]])
testlist <- as.list(testsrt[[1]])
testlist
outlist <- as.list(testlist)
outlist
outlist <- as.vector(testlist)
outlist
outlist <- as.data.frame(testlist)
outlist
outfinal <- as.list(outlist)
outfinal
gdp
edstats
arrange(join(gdp,edstats,V1))
arrange(join(gdp,edstats), V1))
arrange(join(gdp,edstats), V1)
merge(gdp,edstats,by=V1)
names(gdp)
names(edstats)
merge(gdp,edstats,by.x=V1,by.y=V1)
merge(gdp,edstats,by="V1")
join(gdp,edstats,"V1")
arrange(join(gdp,edstats,"V1"), desc=TRUE)
arrange(join(gdp,edstats,"V1"))
arrange(join(gdp,edstats))
merge(gdp,edstats,by=V1)
merge(gdp,edstats,by="V1")
join(gdp,edstats,"V1")
?merge
merge(gdp,edstats,"V1")
?match
mmm <- merge(gdp,edstats,"V1")
dim(mmm)
merge(gdp,edstats)
gdp
merge(edstats,gdp)
merge(edstats,gdp,all=TRUE)
merge(gdp,edstats,all=TRUE)
merge(gdp,edstats,all=TRUE,desc=TRUE)
merge(gdp,edstats,all=TRUE,desc=FALSE)
?merge
merge(gdp,edstats,all=FALSE,sort=TRUE)
merge(gdp,edstats,all=TRUE,sort=TRUE)
merge(gdp,edstats,by.x="V1", by.y="V1",sort=TRUE)
gdp
dim(gdp)
gdp[gdp$V1==""]
gdp[gdp$V1=="",]
gdp[gdp$V1!="",]
gdpx<-gdp[gdp$V1!="",]
gdpx
sort(gdpx[gdpx$V1])
?unique
unique(gdpx)
gdp <- read.csv("getdata_data_GDP.csv", header=FALSE, skip=5, read=190)
?read.csv
gdp <- read.csv("getdata_data_GDP.csv", header=FALSE, skip=5)
gdp <- gdp[1:190, 1:2]
gdp
merge(gdp,edstats,by.x="V1", by.y="V1",sort=TRUE)
mergedata <- merge(gdp,edstats,by.x="V1", by.y="V1",sort=TRUE)
?sort
sort(mergedata)
sort(mergedata[,mergedata$V2])
sort(mergedata[mergedata$V2,])
sort(mergedata[mergedata$V2])
xxx <-mergedata$V2
sort(xxx)
sort(mergedata, mergedata$V2)
sort(mergedata, partial=mergedata$V2)
?order
mergedata[ order(V2),]
mergedata[ order("V2"),]
order(mergedata)
?arrange
arrange(mergedata, desc(V2))
edstats
edstats <- read.csv("getdata_data_EDSTATS_Country.csv", header=FALSE, skip=1)
edstats
names(edstats)
edstats[V2=="SRB",]
edstats[edstats$V2=="SRB",]
edstats[edstats$V2,]
head(edstats)
edstats[edstats$V1=="SRB",]
arrange(mergedata, desc(V2))
merge(gdp,edstats,by.x="V1", by.y="V1",sort=TRUE)
head(mergedata)
head(gdp)
gdp <- read.csv("getdata_data_GDP.csv", header=FALSE, skip=5)
gdp <- gdp[1:190, 1:2]
gdp
merge(gdp,edstats,by.x="V1", by.y="V1",sort=TRUE)
mergedata <- merge(gdp,edstats,by.x="V1", by.y="V1",sort=TRUE)
arrange(mergedata, desc(V2))
head(mergedata)
arrange(mergedata, desc(V2.x))
revdata <- arrange(mergedata, desc(V2.x))
revdata[103]
revdata[103,]
head(mergedata)
HIOECD <- mergedata[mergedata$V3=="High income: OECD",]
HINOECD <- mergedata[mergedata$V3=="High income: nonOECD",]
dim(HIOECD)
head(HIOECD)
avg(HIOECD$V2.x)
ave(HIOECD$V2.x)
?ave
?average
mean(HIOECD$V2.x)
HIOECD$V2.x
sum(HIOECD$V2.x)
HIOECD[,HIOECD$V2.x]
HIOECD[,"V2.x"]
testout <- HIOECD[,"V2.x"]
testout
print(testout)
print(testout[1:30,])
print(testout[1:30])
testout[1:30,]
testout[1:30]
testout[1:29
]
HIOECD[,"V2.x"]
HIOECD
HIOECD[,1:2]
HIOUT <- HIOECD[,1:2]
HIOUT
ave(HIOUT[,2])
as.integer(HIOUT[,HIOUT$V2.x])
as.integer(HIOUT[,"HIOUT$V2.x"])
as.integer(HIOUT[,2])
ave(as.integer(HIOUT[,2]))
ave(as.integer(HINOECD[,2]))
mean(as.integer(HIOUT[,2]))
mean(as.integer(HINOECD[,2]))
as.integer(HINOECD[,2])
sum(as.integer(HINOECD[,2]))
mean(as.integer(HIOECD[,2]))
head(HIOECD)
dim(HIOECD)
dim(HINOECD)
?ave
?median
median(HIOECD)
median(as.integer(HIOECD[,2]))
HIOECD[,1:2]
sum(HIOECD[,2])
sum(as.integer(HIOECD[,2]))
?as.integer
sum(as.integer(HIOECD[,2]), length=0)
sum(as.integer(HIOECD[,2], length=0))
intH <- as.integer(HIOECD[,2], length=0)
intH
sum(intH)
intH <- as.integer(HIOECD[,"V2.x"], length=0)
intH
intH <- as.numeric(HIOECD[,"V2.x"], length=0)
intH
intH <- as.numeric(HIOECD[,[2]], length=0)
intH <- as.numeric(HIOECD[,2], length=0)
intH
HIOECD[,1:2]
intH <- as.numeric(HIOECD[,2], length=0)
intH
str(HIOECD)
intH <- as.numeric(HIOECD[[1],2], length=0)
intH <- as.numeric(HIOECD[[,2], length=0)
intH <- as.numeric(HIOECD[[,2]], length=0)
intH <- as.numeric(HIOECD[,], length=0)
HIOECD
dim(HIOECD)
names(HIOECD)
HIOECD[[1]]
HIOECD[[2]]
HIOECD[[3]]
HIOECD[[4]]
HIOECD[[5]]
HIOECD[[6]]
HIOECD[[7]]
HIOECD[[8]]
HIOECD[[9]]
HIOECD[[10]]
HIOECD[[11]]
HIOECD[[12]]
HIOECD[[13]]
HIOECD[[14]]
HIOECD[[5]]
HIOECD[[16]]
HIOECD[[17]]
HIOECD[[18]]
HIOECD[[19]]
HIOECD[[20]]
HIOECD[[21]]
HIOECD[[1]][]
HIOECD[[1]][1]
HIOECD[[1]][2]
HIOECD[[2]]
HIOECD[[2]][1:30]
HIOECD[[2]][[1:30]]
HIOECD[[2]][1:30]
HIOECD[[1:30,2]]
HIOECD[[1:30],[2]]
HIOECD[,[2]]
HIOECD[[2]]
HIOECD[[2:3]]
HIOECD[[2:4]]
HIOECD[[2:1]]
HIOECD[[2,1]]
HIOECD[[2,2]]
HIOECD[[,2]]
HIOECD[[2,2]]
HIOECD[[3,2]]
HIOECD[[4,2]]
HIOECD[[1:30,2]]
HIOECD[[1:2,2]]
HIOECD[["V2.x",2]]
HIOECD[[2,2]]
HIOECD[[2,"V2.x"]]
HIOECD[[,"V2.x"]]
HIOECD[["V2.x"]]
HIOECD["V2.x"]
ddd <- as.vector(HIOECD["V2.x"])
ddd
sum(ddd)
ave(ddd)
sum(as.integer(ddd))
ave(as.integer(ddd))
ave(as.numeric(ddd))
ddd
dim(ddd)
as.integer(ddd)
ddd <- as.integer(HIOECD["V2.x"])
ddd <- as.integer(HIOECD[2])
as.integer(HIOECD[2]
)
intH <- as.numeric(HIOECD[[,2]], length=0)
intH <- as.numeric(HIOECD[,2], length=0)
intH
intH <- as.integer(HIOECD[,2], length=0)
intH
intH <- as.integer(HIOECD[2], length=0)
ddd <- as.integer(HIOECD[,2])
ddd
as.integer(HIOECD[,2])
HIOECD[,2]
HIOECD
HIOECD[,2]
HINOECD[,2]
ld <- as.list(HINOECD[,2])
ld
ld[[]][1]
ld[[1:23]][1]
ld[[,1]]
ld[[1]]
ld[[2]]
ld[[2]][1]
ld[[1]][1]
ld[[1]][2]
ld[,2]
ld[2
]
ld[[1]][1]
ld
ld <- as.data.frame(HINOECD[,2])
ld
ave(ld)
ave(as.integer(ld))
ave(as.numeric(ld))
ld <- as.matrix(HINOECD[,2])
ld
ave(as.numeric(ld))
ave(as.integer(ld))
ld <- as.matrix(gdp[,2])
ld
ldi < as.integer(ld)
ldi <- as.integer(ld)
ldi
quantile(ldi)
head(edstat)
head(edstats)
quantile(ldi)
ld <- as.matrix(gdp[,2:3])
ld <- as.matrix(mergedata[,2:6])
ld
head(ld)
ld <- as.matrix(mergedata[,1:6])
head(ld)
ld[,2] <- as.integer(ld[,2]
)
head(ld)
ld[,ld$V2.x] <- as.integer(ld[,ld$V2.x])
ld[,2] <- as.integer(ld[,2])
head(ld)
quantile(ldi)
mergedata$q = quantile(as.integer(mergedata[2]))
ldi
ld
mergedata$q = quantile(as.matrix(mergedata[2]))
ld$q = quantile(as.integer(ld[2]))
ld$q = quantile(as.integer(ld[2]),na.rm=TRUE)
ld
head(ld)
ld
ldi
ldi$q = quantile(ld)
ldi$q = quantile(ldi)
ldi
head(ld)
ld[,2] <- as.integer(ld[,2])
ld <- as.matrix(mergedata[,1:6])
head(ld)
ldd <- as.data.frame(ld)
head(ldd)
ldd$q = quantile(ldd[2]))
ldd$q = quantile(ldd[2])
ldd$q = quantile(ldd["V2.x"])
quantile(ldd["V2.x"])
quantile(ldd[,2])
quantile(ldd["V2.x",])
head(ldd)
?quantile
quantile(ldd["V2.x",])
ldd[,1:3]
ldd[,2]
quantile(ldd[,2])
quantile(as.integer(ldd[,2]))
ldd$quant <- quantile(as.integer(ldd[,2]))
ldd$quant <- cut(ldd$v3, breaks=quantile(as.integer(ldd[,2])))
?cut
ldd$quant <- cut(as.integer(ldd[,2]), breaks=quantile(as.integer(ldd[,2])))
head(ldd)
quantile(as.integer(ldd[,2]))
ldd$quant <- cut(as.integer(ldd[,2]), breaks=quantile(as.integer(\\ldd[,2])))
ldd$quant <- cut(as.integer(ldd[,2]), breaks=quantile(ldd[,2]))
ldd$quant <- cut(as.integer(ldd[,2]), breaks=quantile(as.integer(ldd[,2])))
head(ldd)
quantile(as.integer(ldd[,2]))
ldd$q1 <- cut(as.integer(ldd[,2]), breaks=quantile(as.integer(ldd[,2])))
head(ldd)
ldd$q1 <- cut(as.integer(ldd[,2]), breaks=quantile(as.numeric(ldd[,2])))
head(ldd)
table(ldd$q1)
ldd$q1 <- cut(as.integer(ldd[,2]), breaks=quantile(as.integer(ldd[,2])))
table(ldd$q1)
table(ldd$q1,ldd[,2])
ldd$q1 <- cut(as.integer(ldd[,2]), breaks=quantile(as.integer(ldd[,2]), probs=5))
?quantile
ldd$q1 <- cut(as.integer(ldd[,2]), breaks=quantile(as.integer(ldd[,2]), probs=c(0.1,0.3,0.5,0.7,0.9)))
head(ldd)
table(ldd$q1,ldd[,2])
table(ldd$q1,ldd[,3])
table(ldd$q1,ldd[,4])
quantile(as.integer(ldd[,2]), probs=c(0.1,0.3,0.5,0.7,0.9))
quantile(as.integer(ldd[,2]), probs=c(0,0.2,0.4,0.6,0.8))
quantile(as.integer(ldd[,2]))
ldd$q1 <- cut(as.integer(ldd[,2]), breaks=quantile(as.integer(ldd[,2])))
table(ldd$q1,ldd[,4])
table(ldd[,4],ldd$q1)
ldd$q1 <- cut(as.integer(ldd[,2]), breaks=quantile(as.integer(ldd[,2]), probs=c(0.2,0.4,0.6,0.8)))
table(ldd[,4],ldd$q1)
ldd$q1 <- cut(as.integer(ldd[,2]), breaks=quantile(as.integer(ldd[,2]), probs=c(0,0.2,0.4,0.6,0.8,1.0)))
table(ldd[,4],ldd$q1)
ldd$q1 <- cut(as.integer(ldd[,2]), breaks=quantile(as.integer(ldd[,2]), probs=c(0,0.2,0.4,0.6,0.8)))
table(ldd[,4],ldd$q1)
ldd$q1 <- cut(as.integer(ldd[,2]), breaks=quantile(as.integer(ldd[,2]), probs=c(0.1,0.3,0.5,0.7,0.9)))
table(ldd[,4],ldd$q1)
ldd$q1 <- cut(as.integer(ldd[,2]), breaks=quantile(as.integer(ldd[,2]), probs=c(0.0,0.2,0.4,0.6,0.8,1)))
table(ldd[,4],ldd$q1)
ldd$q1 <- cut(as.integer(ldd[,2]), breaks=quantile(as.integer(ldd[,2]), probs=c(0,0.25,0.5,0.7.5,1)))
ldd$q1 <- cut(as.integer(ldd[,2]), breaks=quantile(as.integer(ldd[,2]), probs=c(0,0.25,0.5,0.75,1)))
table(ldd[,4],ldd$q1)
ldd$q1 <- cut(as.integer(ldd[,2]), breaks=quantile(as.integer(ldd[,2]), probs=c(0,0.2,0.4,0.6,0.8,1)))
table(ldd[,4],ldd$q1)
ldd[,("V2.x <=38"]
ldd[,("V2.x" <=38)]
ldd[,"V2.x" <=38]
ldd[,[2] <=38]
ldd
ldd[,([2]<=38)]
ldd[,(ld$V2.x <=38)]
ldd[,(ld$V2.x <=38)]
ldd[1:38,]
?sort
arrange(ldd, V2.x)
library(plyr)
arrange(ldd, V2.x)
arrange(ldd, as.integer(V2.x))
?arrange
lddm <- as.matrix(ldd)
lddm
arrange(lddm, as.integer(V2.x))
order(lddm, as.integer(V2.x))
?sort
gdp <- read.csv("getdata_data_GDP.csv", header=FALSE, skip=5)
gdp <- gdp(1:38,)
gdp <- gdp[1:38,]
merge(gdp,edstats,by=V1)
merge(gdp,edstats,by="V1")
manuald <- merge(gdp,edstats,by="V1")
head(manuald)
manuald <- manuald[1,6]
manuald
manuald <- merge(gdp,edstats,by="V1")
manuald <- manuald[,1:6]
manuald
manuald <- merge(gdp,edstats,by="V1")
manuald <- manuald[,1:8]
manuald
manuald <- merge(gdp,edstats,by="V1")
manuald
